@using PGx.Model.Entities
@model PGx.Model.Entities.PGxGuideline
<script>
    $(function () {
        $("#tabs").tabs();
        $("#guideline-form>div").accordion({ heightStyle: "content", header: "h3", collapsible: true });
        $('#relatedgene_list').multiselect({
            selectedList: 20
        }).multiselectfilter({
            label: 'Search',
            placeholder: ''
        });

        $("#recommendation_table").dataTable({
            "bJQueryUI": true,
            "sAjaxSource": "/AjaxHandler/RecommendationSelectTableAjaxHandler",
            "bServerSide": true,
            "bProcessing": false,
            "bAutoWidth": false,
            "bSort": false,
            "bRetrive": false,
            "fnServerParams": function (aoData) {
                aoData.push(
                            { "name": "GuidelineID", "value": "@Model.ID" });
            },
            "aoColumns": [
            {
                "fnRender": function (oObj) {
                    var ln = '<a href="#" onclick="dosingEdit(' + oObj.aData["0"] + ')">'+oObj.aData["1"]+ '</a>';
                    return ln;
                }
            },
            {
                "fnRender": function (oObj) {
                    return "<span>" + oObj.aData["2"] + "</span>";
                }
            },
            {
                "fnRender": function (oObj) {
                    return "<span>" + oObj.aData["3"] + "</span>";
                }
            },
            {
                "fnRender": function (oObj) {
                    return "<span>" + oObj.aData["4"] + "</span>";
                }
            },
            {
                "fnRender": function (oObj) {
                    return "<span>" + oObj.aData["5"] + "</span>";
                }
            }
            ]
        });
    });

    function dosingEdit(id,guidelineId) {
        debugger;
        $.ajax({
            url: '@Url.Action("DosingEdit", "PGxKnowledgeBase")',
            data: { id: id,guidelineId:guidelineId },
            type: 'Get',
            async: false,
            cache: false,
            timeout: 10000
        }).done(function (data) {
            $('#dosing').html('');
            $('#dosing').html(data);
        });
        }

        function drugEdit(id, chemicalId) {
            debugger;
            $.ajax({
                url: '@Url.Action("DrugEdit", "PGxKnowledgeBase")',
            data: { id: id, chemicalId: chemicalId },
            type: 'Get',
            async: false,
            cache: false,
            timeout: 10000
        }).done(function (data) {
            $('#drug').html('');
            $('#drug').html(data);
        });
        }
    
    function alternativeDrugEdit(id, chemicalId) {
        debugger;
        $.ajax({
            url: '@Url.Action("AlternativeDrugEdit", "PGxKnowledgeBase")',
            data: {id:id,chemicalId:chemicalId},
            type:'Get'
        }).done(function (data) {
            $('#alternative_drug').html('');
            $('#alternative_drug').html(data);
        });
    }


    function addGuidelineLiterature() {
        var rowNo = document.getElementById("literature_table").rows.length-1;
        var thisTrId = "guideline_" + rowNo;
        var html = "<tr id=" + thisTrId + "><td><textarea name='_title' class='form-control'></textarea></td><td><input type='text' name='_journal' class='form-control'></td><td><input type='text' name='_pmid' class='form-control'></td><td><input name='_year' class='form-control'></td><td> <img onclick='deleteGuidelineLiterature(\"" + thisTrId + "\");' style='cursor:pointer; position: relative; margin-bottom: -5px' src='/Content/images/remove.png' alt='Delete' /></td>/tr>"
        $('#literature_table tr:last').after(html);
    }
    function deleteGuidelineLiterature(thisTrId) {
        debugger;
        var thisRow = document.getElementById(thisTrId);
        if (thisRow)
            thisRow.parentNode.removeChild(thisRow);
    }

    var trNum = 0;
    function addPhenotype(tabelId) {
        debugger;
        trNum++;
        var thisTrId = "addTr" + "_" + trNum;
        $.ajax({
            url: '@Url.Action("AddRowPartial", "PGxKnowledgeBase")',
            data: { id: thisTrId },
            type: 'Get',
            async: false,
            cache: false,
            timeout: 10000
        }).done(function (data) {
            $('#' + tabelId + ' tr:last').after(data);
        })
    }

    function deletePhenotype(rowId) {
        debugger;
        var thisRow = document.getElementById(rowId);
        if (thisRow)
            thisRow.parentNode.removeChild(thisRow);
    }

    function phenoList(id) {
        debugger;
        //jquery 方法
        var tr = $("#" + id);
        var td = tr.children(":first");
        var select = td.children(':first');
        var gene = select.find("option:selected").text();
        if (gene != "Unselected" && gene != "") {
            $.ajax({
                url: '@Url.Action("NamedPhenotypeList", "PGxKnowledgeBase")',
                data: { gene: gene },
                type: 'Get',
                async: false,
                cache: false,
                timeout: 10000
            }).done(function (data) {
                debugger;
                $("#" + id).children().eq(1).html(data);
            })
        }
        else {
            $("#" + id).children().eq(1).html("<select><option>Unselected</option></select>");
        }
    }

    function saveGuidePrimInfo() {
        debugger;
        $("#GenesInStr").val(getMultiSelectVal("relatedgene_list"));

        var litRows = document.getElementById("literature_table").rows;
        var litArr = [];
        for (j = 1; j < litRows.length; j++)
        {
            var litObj = {};
            litObj["M_title"] = litRows[j].children[0].children[0].value;
            litObj["M_journal"] = litRows[j].children[1].children[0].value;
            litObj["M_pmid"] = litRows[j].children[2].children[0].value;
            litObj["M_year"] = litRows[j].children[3].children[0].value;
            litArr.push(litObj)
        }

        $("#LiteratureJson").val(JSON.stringify(litArr));


        $("#guideline-form").ajaxSubmit(function (data) {
            debugger;
            guideLineEdit(@Model.ID);
            alert(data);
        });
        return false;
    }

    function deleteGuideline(id) {
        debugger;
        $.blockUI({ message: $('#delete_question'), css: { width: '275px' } });
        $('#delete_yes').click(function () {
            $.ajax({
                url: '@Url.Action("DeleteGuideline", "PGxKnowledgeBase")',
                data: { id: id },
                type: 'Get',
            }).done(function (data) {
                $.unblockUI();
                alert(data);
                window.location.replace("/PGxKnowledgeBase/TherapeuticKM")
            });
        });
        $('#delete_no').click(function () {
            $.unblockUI();
        });
    }

    function GuidelineCancel() {
        window.location.replace("/PGxKnowledgeBase/TherapeuticKM");
    }
</script>
<style>
.flex-container {
    display: -webkit-flex;
    display: flex;
    -webkit-align-items: center;
    align-items: center;
}
    </style>
@{ string chemicalName;
   if (string.IsNullOrEmpty(Model.Chemical)==false)
   {
       chemicalName = Model.Chemical+"-"+Model.GenesInStr;
   }
   else
   {
       chemicalName = "New Chemical";
   }
    <h1>@chemicalName</h1>
}

<div id="tabs">
    <ul>
        <li><a href="#fragment-0"><span>Interaction</span></a></li>
        <li><a href="#fragment-1"><span>Clinical Recommendation</span></a></li>
    </ul>
    <div id="fragment-0">
        @using (Html.BeginForm("GuidelineEdit", "PGxKnowledgeBase", FormMethod.Post, new { id = "guideline-form", onsubmit = "return saveGuidePrimInfo();" }))
        {

                @Html.ValidationSummary(true)
            if(Model.ID>0)
            {
                @Html.HiddenFor(m => m.ID)
            }
            else
            {
               <input id="ID" name="ID" type="hidden" value="0"/>
            }
                
                @Html.HiddenFor(m => m.GenesInStr)
                @Html.HiddenFor(m => m.LiteratureJson)

                
            PGx_KBEntities context = new PGx_KBEntities();
            var genes = context.DefinitionFile.Select(x => x.GeneSymbol).ToList();        
        <div>
            <h3>Primary Info</h3>
            <div>        
                    <div><label>Generic Name</label></div>
                <div class="editor-field">@Html.TextBoxFor(m => m.Chemical)</div>
                  <div><label>Source</label></div>
                    <div class="editor-field">@Html.TextBoxFor(m => m.Source)</div>

                    <div class="editor-field">
                        <label>Affected Genes</label></div>
                    <div class="editor-field">
                        <select id="relatedgene_list" class="genelist" style="width: 350px" multiple="multiple">
                            @foreach (var gene in genes)
                            {
                                if (Model.DefinitionFile != null && Model.DefinitionFile.Select(x => x.GeneSymbol).Contains(gene))
                                {
                                <option class="geneOption" selected="selected">@gene</option>
                                }
                                else
                                {
                                <option class="geneOption">@gene</option>
                                }

                            }
                        </select>
                    </div>
                </div>
            </div>@*
                   <div>
                    <h3>Related drug substance</h3>                  
                    <div class="editor-field">
                        </div>
                        </div>*@
                        <div>
                <h3>Summary</h3>
            <div>
                <div>
                    <div class="editor-field"><label>Clinical Relevance</label></div>
                    <div class="editor-field">@Html.TextAreaFor(m => m.ClinicalImplication, 10, 0,  new { @class = "form-control" })</div>
                </div>
             </div>
             </div>
                 <div>
                    <h3>PGx clinical guidelines</h3>                  
                    <div>
                        <label>Add New</label> <img onclick="addGuidelineLiterature();" style="cursor:pointer; position: relative" src="/Content/images/add_black.png" alt="Add" />
       
                                   <table id="literature_table" class="table table-hover table-striped">
                                       <thead>
                                           <tr>
                                               <th class="col-md-6">Title</th>
                                               <th class="col-md-3">Source</th>
                                               <th class="col-md-1.2">Pmid</th>
                                               <th class="col-md-1.2">Year</th>
                                               <th class=""></th>
                                           </tr>
                                       </thead>
                                       <tbody>
                                           @{ if (Model.Literature.Count > 0)
                                              {
                                                  int guidelineNo = 0;
                                                  foreach (var lit in Model.Literature)
                                                  {
                                                      string guidelineId = "guideline_" + guidelineNo.ToString();
                                               <tr id="@guidelineId">
                                                   <td>@Html.TextArea("_title", lit.M_title, new { @class = "form-control" })</td>
                                                   <td >@Html.TextBox("_source", lit.M_journal, new { @class = "form-control" })</td>
                                                   <td>@Html.TextBox("_pmid", lit.M_pmid, new { @class = "form-control" })</td>
                                                   <td>@Html.TextBox("_year", lit.M_year, new { @class = "form-control" })</td>
                                                   <td><img onclick="deleteGuidelineLiterature('@guidelineId');" style="cursor:pointer" src="/Content/images/remove.png" alt="Delete" /></td>
                                               </tr>
                                                      guidelineNo++;
                                                  }
                                              }
                                              else
                                              {
                                                   <tr id="guideline_0">
                                                   <td>@Html.TextArea("_title", "", new { @class = "form-control" })</td>
                                                   <td >@Html.TextBox("_source", "", new { @class = "form-control" })</td>
                                                   <td>@Html.TextBox("_pmid", "", new { @class = "form-control" })</td>
                                                   <td>@Html.TextBox("_year", "", new { @class = "form-control" })</td>
                                                   <td><img onclick="deleteGuidelineLiterature('guideline_0');" style="cursor:pointer" src="/Content/images/remove.png" alt="Delete" /></td>
                                               </tr>
                                              }
                                           }
                                       </tbody>
                                   </table>
                        </div>
                        </div>
            <br />
                <input type="submit" value="submit" />
            <button type="button" onclick="deleteGuideline(@Model.ID)">Delete</button>
            <button type="button" onclick="GuidelineCancel()">Cancel</button>
        }
    </div>

    <div id="fragment-1">
                <div class="panel panel-default ">
            <div class="panel-heading">
                <h3 class="panel-title">Recommendation list</h3>
            </div>
 
               @if (Model.ID == 0)
               {
            <h4>Please SAVE the Interaction Info first for the New Chemical.</h4> 
               }
               else
               {
                    <div style="font-style:italic">
        Following are phenotypes/phenotype combinations of genes affecting chemical <em>@Model.Chemical</em>. Choose one to edit or create a new one.
    </div>
                <div>
                    <h4><a href="#" onclick="dosingEdit('',@Model.ID)">Add New Item</a></h4>
                </div>
                <table id="recommendation_table" class="table table-striped table-hover" style="margin-bottom:0px">
                    <thead>
                        <tr>
                        <th>Name</th>
                        <th>Is risk phenotype</th>
                        <th>Evidence level</th>
                         <th>Implication</th>
                        <th>Recommendation</th>
                       </tr>
                    </thead>
                    <tbody></tbody>
                </table>                                    
              }
        
    </div>
        <div id="dosing" ></div>
</div>

        <div id="delete_question" style="display: none; cursor: default">
    <h1>Are you sure to delete this item?</h1>
    <input type="button" id="delete_yes" value="Yes" />
    <input type="button" id="delete_no" value="No" />
</div>

